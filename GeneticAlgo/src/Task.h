/* 
 * File:   Task.h
 * Author: nika
 *
 * Created on November 14, 2015, 3:19 PM
 */
#include <vector>
#include <string>

//for std::vector
#ifndef TASK_H
#define	TASK_H

class Task {
public:
	Task();
	//Task(const Task& orig);
	Task(int identity, float val, long st, long et, long ext,
			std::vector<int> deplist2, std::vector<int> pretask2);
	void setTId(int identity);
	int getTId();
	void setVal(float val);
	float getVal();
	long getStarttime();
	void setStarttime(long value);
	long getEndtime();
	void setEndtime(long value);
	long getExectime();
	void setExectime(long value);
	std::vector<int> getDeplist();
	void setDeplist(std::vector<int> value);
	std::vector<int> getPretask();
	void setPretask(std::vector<int> value);
	std::string toString();

	int id;
		float value;
		long starttime;
		long endtime;
		long exectime;
		std::vector<int> deplist;
		std::vector<int> pretask;
	virtual ~Task();
private:

};

#endif	/* TASK_H */

