/* 
 * File:   Task.cpp
 * Author: nika
 * 
 * Created on November 14, 2015, 3:19 PM
 */

#include "Task.h"
#include <vector>  //for std::vector
#include <string>  //for std::string
#include <iostream>
#include <sstream>

using namespace std;
/*int id;
float value;
long starttime;
long endtime;
long exectime;
std::vector<int> deplist;
std::vector<int> pretask;
*/
void Task::setTId(int identity) {
	id = identity;
}

int Task::getTId() {
	return id;
}

void Task::setVal(float val) {
	value = val;
}

float Task::getVal() {
	return value;
}

long Task::getStarttime() {
	return starttime;
}

void Task::setStarttime(long value) {
	starttime = value;
}

long Task::getEndtime() {
	return endtime;
}

void Task::setEndtime(long value) {
	endtime = value;
}

long Task::getExectime() {
	return exectime;
}

void Task::setExectime(long value) {
	exectime = value;
}

std::vector<int> Task::getDeplist() {
	return deplist;
}

void Task::setDeplist(std::vector<int> value) {
	deplist = value;
}

std::vector<int> Task::getPretask() {
	return pretask;
}

void Task::setPretask(std::vector<int> value) {
	pretask = value;
}

string Task::toString() {
	std::ostringstream oss;

	int pSize = pretask.size();
	int depSize = deplist.size();
	string returnStr = "";
	//cout << "printing " << id << endl;


	oss << "\n[ id = "<< id;

	oss << " , val = " << value << " startTime = " << starttime;

	oss << " , endTime = " << endtime;

	oss << " , execTime = " << exectime;

	oss << " depList = @/ ";
	for (int var = 0; var < depSize; var++) {

		int tmp = deplist.at(var);
		oss << tmp << " , ";

	}
	oss << " @/ Pretasks = $<< ";

	for (int var = 0; var < pSize; var++) {

		int tmp = pretask.at(var);
		oss << tmp << " , ";

	}

	oss << " >>$ ] \n";
	returnStr.append(oss.str());

	return returnStr;
}

Task::Task() {

}

Task::Task(int identity, float val, long st, long et, long ext,
		std::vector<int> deplist2, std::vector<int> pretask2) {
	id = identity;
	value = val;
	starttime = st;
	endtime = et;
	exectime = ext;
	deplist = deplist2;
	pretask = pretask2;
//	cout << "added task " << id<<endl;
}

//Task::Task(const Task& orig) {

//}

Task::~Task() {

}
